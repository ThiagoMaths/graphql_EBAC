{
  "stats": {
    "suites": 0,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-05T23:30:51.562Z",
    "end": "2025-10-05T23:31:33.287Z",
    "duration": 41725,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
      "title": "",
      "fullFile": "",
      "file": "/home/runner/work/graphql_EBAC/graphql_EBAC/test/API/categories.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "c4d6173b-8ffc-4a3c-9a50-0dced07c8f04",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1093,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "ab233ebf-e88a-4201-9454-1eeca05e0c31",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "262d7129-9ca9-4366-b078-8b2e4f327c3f",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 486,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "3f56abb4-f6a2-46f8-9bdb-3c894cd10e4f",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 412,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "11eb361c-a6b6-4afc-9c5a-4e8f7c78f7be",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 513,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "0e26c3de-f21c-4f3e-b98f-dcf1762b1ac8",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "25c19299-b8f9-491f-b58b-09a3d0ab6814",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "7bf79d81-7eb0-47dd-96a4-b09ef19b92da",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 526,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "a240db3c-42e0-4e93-aebe-cdbfb947e0b6",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 490,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "86e211a1-5f6e-46ed-a6d9-31e66ece920d",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "73c8d882-81e0-44e7-98a2-da7dffd8bcfb",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "75e944e2-e49b-43ac-a33e-81bc0ecec095",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 171,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word(6)\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "b0b84abd-adbb-4edb-be22-68a0d87810b4",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a category",
          "fullTitle": "API - Should delete a category",
          "timedOut": false,
          "duration": 711,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "e85bbf88-45b6-4649-925e-1a2673a89211",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a category",
          "fullTitle": "API - Should edit a category",
          "timedOut": false,
          "duration": 720,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": null\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "4741b00d-f484-49d6-a766-2945a216aefd",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 173,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "eab1e628-4905-4bf3-8fbf-0e34a7e68bf4",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a product",
          "fullTitle": "API - Should delete a product",
          "timedOut": false,
          "duration": 719,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "6cfcbfb3-e421-4af0-b6aa-56461ce3b7a5",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a product",
          "fullTitle": "API - Should edit a product",
          "timedOut": false,
          "duration": 783,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1000\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "eefbcc38-8736-4863-a19c-5fa31ec8f639",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a category",
          "fullTitle": "FRONT - Should add a category",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add category')\n        .useInteraction('Add category response')\n        .post('http://localhost:4000/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "88f068cd-bf4d-4e67-bc83-e80f981464b1",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 425,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    await flow('Add category')\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "cf6e6dde-5936-49c1-bd1d-6b7f36b7dbcf",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a product",
          "fullTitle": "FRONT - Should add a product",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add product')\n        .useInteraction('Add product response')\n        .post('http://localhost:4000/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "237fbd68-74f9-45bd-ba83-b90676ee5e35",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 373,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product();\n    await flow('Add product')\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "3f5e1994-4b1b-47c5-9694-752508e869be",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a category in the list",
          "fullTitle": "Should add a category in the list",
          "timedOut": false,
          "duration": 380,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation AddCategory($name: String, $photo: String) {\n                addCategory(name: $name, photo: $photo) {\n                name\n                photo\n            }\n         }      \n    `)\n        .withGraphQLVariables({\n            \"name\": \"Bags\",\n            \"photo\": \"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\"\n        })\n        .returns('data._id')\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                addCategory: {\n                    name: like(\"Bags\"),\n                    photo: like(\"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\")\n                }\n            }\n        })",
          "err": {},
          "uuid": "6b74c218-2379-4141-b9a5-c3133867f7df",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a category",
          "fullTitle": "Should delete a category",
          "timedOut": false,
          "duration": 391,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n        mutation DeleteCategory($deleteCategoryId: ID!) {\n            deleteCategory(id: $deleteCategoryId) {\n            name\n         }\n       }        \n    `)\n        .withGraphQLVariables({\n            \"deleteCategoryId\": \"66f835c6995b0c7c4e35b6da\"\n        })\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                deleteCategory: {\n                    name: null \n                }\n            }\n        });",
          "err": {},
          "uuid": "92629d17-8119-4cbf-96ec-5abc39382719",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a category",
          "fullTitle": "Should edit a category",
          "timedOut": false,
          "duration": 315,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation EditCategory($editCategoryId: ID!, $name: String, $photo: String) {\n                editCategory(id: $editCategoryId, name: $name, photo: $photo) {\n                name\n                photo\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editCategoryId\": \"66f5aced42524225170155b4\",\n            \"name\": `Viagens${Math.floor(Math.random() * 100)}`,\n            \"photo\": \"https://www.gstatic.com/webp/gallery/1.sm.webp\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editCategory: {\n                    name: null,  \n                    photo: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "92042c2f-e2aa-4997-a7c0-a1c0a42afb25",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a product",
          "fullTitle": "Should add a product",
          "timedOut": false,
          "duration": 288,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation AddProduct($name: String, $price: Float, $quantity: Float) {\n                addProduct(name: $name, price: $price, quantity: $quantity) {\n                name\n                price\n                quantity\n            }\n        }     \n    `)\n        .withGraphQLVariables({\n            \"name\": `Novo produto${Math.floor(Math.random() * 100)}`,\n            \"price\": 100.00,\n            \"quantity\": Math.floor(Math.random() * 100)\n        })\n        .expectStatus(200)\n        .expectBodyContains(\"name\", \"price\", \"quantity\")",
          "err": {},
          "uuid": "27cdf69f-f956-4a3c-80ae-18323faf1d13",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a product",
          "fullTitle": "Should delete a product",
          "timedOut": false,
          "duration": 289,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation DeleteProduct($deleteProductId: ID!) {\n                deleteProduct(id: $deleteProductId) {\n                name\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"deleteProductId\": \"66f8351f995b0c7c4e35b6ae\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                deleteProduct: {\n                    name: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "ab27738c-f6ff-4196-b7ae-5bcb329a471d",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a product",
          "fullTitle": "Should edit a product",
          "timedOut": false,
          "duration": 260,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation EditProduct($editProductId: ID!, $name: String, $price: Float, $quantity: Float) {\n                editProduct(id: $editProductId, name: $name, price: $price, quantity: $quantity) {\n                name\n                quantity\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editProductId\": \"66f562b242524225170151c6\",\n            \"name\": `Guitarra${Math.floor(Math.random() * 100)}`,\n            \"price\": 2.000,\n            \"quantity\": 500\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editProduct: {\n                    name: null,\n                    quantity: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "371d6ebb-0473-4ed1-a558-25d8384955ed",
          "parentUUID": "5b44842c-0f48-437a-add7-ad33d5e0a8e6",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "b0b84abd-adbb-4edb-be22-68a0d87810b4",
        "e85bbf88-45b6-4649-925e-1a2673a89211",
        "4741b00d-f484-49d6-a766-2945a216aefd",
        "eab1e628-4905-4bf3-8fbf-0e34a7e68bf4",
        "6cfcbfb3-e421-4af0-b6aa-56461ce3b7a5",
        "eefbcc38-8736-4863-a19c-5fa31ec8f639",
        "88f068cd-bf4d-4e67-bc83-e80f981464b1",
        "cf6e6dde-5936-49c1-bd1d-6b7f36b7dbcf",
        "237fbd68-74f9-45bd-ba83-b90676ee5e35",
        "3f5e1994-4b1b-47c5-9694-752508e869be",
        "6b74c218-2379-4141-b9a5-c3133867f7df",
        "92629d17-8119-4cbf-96ec-5abc39382719",
        "92042c2f-e2aa-4997-a7c0-a1c0a42afb25",
        "27cdf69f-f956-4a3c-80ae-18323faf1d13",
        "ab27738c-f6ff-4196-b7ae-5bcb329a471d",
        "371d6ebb-0473-4ed1-a558-25d8384955ed"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 6000,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": "false",
        "html": "true",
        "json": "true"
      },
      "version": "6.3.0"
    }
  }
}