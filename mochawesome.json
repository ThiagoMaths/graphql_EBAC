{
  "stats": {
    "suites": 0,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-05T23:26:15.224Z",
    "end": "2025-10-05T23:26:50.678Z",
    "duration": 35454,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
      "title": "",
      "fullFile": "",
      "file": "/home/runner/work/graphql_EBAC/graphql_EBAC/test/API/categories.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "e2530c6b-8635-4089-a379-7b3b0c6ed327",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 803,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "c48437ac-69ad-446b-9966-6a3f74f237d0",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "02abc2f2-3644-45d4-8cc7-4190d94494ba",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 518,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "78edde50-721a-48a0-9a96-654262cca7d8",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 413,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "f3ce09f8-e393-448e-9da4-f46c27d81e5e",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 408,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "7de089d9-0a25-4182-ba59-c6c9b9467453",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "878ae2ba-f2f8-4f58-ad20-5539301cbc90",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "7b46c71f-1df1-4400-b494-f6a3742726b2",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 380,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "128b48ad-502c-45c6-a7d2-e175544ac6b6",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 416,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "82cb9849-7480-4e8d-bcd1-818176bc4c96",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "af85f847-9942-4b0c-8183-987bb213016a",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "d1d6e7e4-5f29-40e5-bb50-603a699c6389",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 287,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word(6)\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "5a0de92d-041a-42c9-add2-845e8ff45aac",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a category",
          "fullTitle": "API - Should delete a category",
          "timedOut": false,
          "duration": 575,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "86e9d674-3d34-4619-8e40-f282d541f578",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a category",
          "fullTitle": "API - Should edit a category",
          "timedOut": false,
          "duration": 706,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": null\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "273b4599-acf7-4d05-bdfd-1306f51e48a1",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 256,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "a4abd337-f21d-4bdd-acef-14cb1e3fd4fa",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a product",
          "fullTitle": "API - Should delete a product",
          "timedOut": false,
          "duration": 721,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "ed9840b5-ce7c-445b-9fe9-504351859ebd",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a product",
          "fullTitle": "API - Should edit a product",
          "timedOut": false,
          "duration": 723,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1000\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "0dfff815-c090-4e54-a9fb-225e2d4d41a9",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a category",
          "fullTitle": "FRONT - Should add a category",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add category')\n        .useInteraction('Add category response')\n        .post('http://localhost:4000/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "3c3a470c-32f1-468d-afa9-39c6b9bfa246",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 138,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    await flow('Add category')\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "54d342b1-e712-4eb1-a4bb-f6f6f3e8552c",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a product",
          "fullTitle": "FRONT - Should add a product",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add product')\n        .useInteraction('Add product response')\n        .post('http://localhost:4000/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "2b528337-64ea-4495-b145-8176523be3ad",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 250,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product();\n    await flow('Add product')\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "e9b88946-fd48-446c-bb35-92586a0d320d",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a category in the list",
          "fullTitle": "Should add a category in the list",
          "timedOut": false,
          "duration": 250,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation AddCategory($name: String, $photo: String) {\n                addCategory(name: $name, photo: $photo) {\n                name\n                photo\n            }\n         }      \n    `)\n        .withGraphQLVariables({\n            \"name\": \"Bags\",\n            \"photo\": \"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\"\n        })\n        .returns('data._id')\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                addCategory: {\n                    name: like(\"Bags\"),\n                    photo: like(\"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\")\n                }\n            }\n        })",
          "err": {},
          "uuid": "817aadb9-a6ce-41ef-a3d3-ff471f5a3783",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a category",
          "fullTitle": "Should delete a category",
          "timedOut": false,
          "duration": 250,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n        mutation DeleteCategory($deleteCategoryId: ID!) {\n            deleteCategory(id: $deleteCategoryId) {\n            name\n         }\n       }        \n    `)\n        .withGraphQLVariables({\n            \"deleteCategoryId\": \"66f835c6995b0c7c4e35b6da\"\n        })\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                deleteCategory: {\n                    name: null \n                }\n            }\n        });",
          "err": {},
          "uuid": "a0925a8d-0f56-415c-9c2c-054d6aa0da5e",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a category",
          "fullTitle": "Should edit a category",
          "timedOut": false,
          "duration": 148,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation EditCategory($editCategoryId: ID!, $name: String, $photo: String) {\n                editCategory(id: $editCategoryId, name: $name, photo: $photo) {\n                name\n                photo\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editCategoryId\": \"66f5aced42524225170155b4\",\n            \"name\": `Viagens${Math.floor(Math.random() * 100)}`,\n            \"photo\": \"https://www.gstatic.com/webp/gallery/1.sm.webp\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editCategory: {\n                    name: null,  \n                    photo: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "d1b64269-33af-4cd0-be4d-e6fbb5e848ef",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a product",
          "fullTitle": "Should add a product",
          "timedOut": false,
          "duration": 146,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation AddProduct($name: String, $price: Float, $quantity: Float) {\n                addProduct(name: $name, price: $price, quantity: $quantity) {\n                name\n                price\n                quantity\n            }\n        }     \n    `)\n        .withGraphQLVariables({\n            \"name\": `Novo produto${Math.floor(Math.random() * 100)}`,\n            \"price\": 100.00,\n            \"quantity\": Math.floor(Math.random() * 100)\n        })\n        .expectStatus(200)\n        .expectBodyContains(\"name\", \"price\", \"quantity\")",
          "err": {},
          "uuid": "39ffdbaa-1559-44e6-be02-a1fb0debac40",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a product",
          "fullTitle": "Should delete a product",
          "timedOut": false,
          "duration": 140,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation DeleteProduct($deleteProductId: ID!) {\n                deleteProduct(id: $deleteProductId) {\n                name\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"deleteProductId\": \"66f8351f995b0c7c4e35b6ae\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                deleteProduct: {\n                    name: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "061210bf-8e84-4333-9fa8-6ececbe6fb5a",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a product",
          "fullTitle": "Should edit a product",
          "timedOut": false,
          "duration": 139,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation EditProduct($editProductId: ID!, $name: String, $price: Float, $quantity: Float) {\n                editProduct(id: $editProductId, name: $name, price: $price, quantity: $quantity) {\n                name\n                quantity\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editProductId\": \"66f562b242524225170151c6\",\n            \"name\": `Guitarra${Math.floor(Math.random() * 100)}`,\n            \"price\": 2.000,\n            \"quantity\": 500\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editProduct: {\n                    name: null,\n                    quantity: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "85d09859-5416-4fd5-b3cc-7a7891dba437",
          "parentUUID": "dd7e4e98-f061-4fa4-96a0-8f1e6b003dff",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "5a0de92d-041a-42c9-add2-845e8ff45aac",
        "86e9d674-3d34-4619-8e40-f282d541f578",
        "273b4599-acf7-4d05-bdfd-1306f51e48a1",
        "a4abd337-f21d-4bdd-acef-14cb1e3fd4fa",
        "ed9840b5-ce7c-445b-9fe9-504351859ebd",
        "0dfff815-c090-4e54-a9fb-225e2d4d41a9",
        "3c3a470c-32f1-468d-afa9-39c6b9bfa246",
        "54d342b1-e712-4eb1-a4bb-f6f6f3e8552c",
        "2b528337-64ea-4495-b145-8176523be3ad",
        "e9b88946-fd48-446c-bb35-92586a0d320d",
        "817aadb9-a6ce-41ef-a3d3-ff471f5a3783",
        "a0925a8d-0f56-415c-9c2c-054d6aa0da5e",
        "d1b64269-33af-4cd0-be4d-e6fbb5e848ef",
        "39ffdbaa-1559-44e6-be02-a1fb0debac40",
        "061210bf-8e84-4333-9fa8-6ececbe6fb5a",
        "85d09859-5416-4fd5-b3cc-7a7891dba437"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 4731,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": "false",
        "html": "true",
        "json": "true"
      },
      "version": "6.3.0"
    }
  }
}