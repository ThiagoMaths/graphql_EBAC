{
  "stats": {
    "suites": 0,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-05T23:31:06.140Z",
    "end": "2025-10-05T23:31:41.657Z",
    "duration": 35517,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
      "title": "",
      "fullFile": "",
      "file": "/home/runner/work/graphql_EBAC/graphql_EBAC/test/API/categories.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "7e9fb2ae-0a88-4aca-be8a-1af5a18ec66f",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 799,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "5c7efd0e-a322-40ce-a20a-45b7aa5d46ae",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "26a40c70-68d2-4d4a-9c92-3fb9c7a7861d",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 496,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\n    token = await flow('Login')\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withBody({\n            email: \"admin@admin\",\n            password: \"admin123\"\n        })\n        .returns('data.token');",
          "err": {},
          "uuid": "8d8dc44f-19f5-43d6-8197-2d97ae5c7e8b",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 371,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "32482ffd-f43c-44f2-8475-db36d153fc39",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 367,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "07791bdf-0b9c-46ef-8679-366a18e858ae",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "d7b65532-3430-4931-a36c-0c9beaf89c38",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await flow('Login')\n        .useInteraction('Login response')\n        .post('http://localhost:4000/public/authUser')\n        .withJson({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.token')",
          "err": {},
          "uuid": "4ec0e43c-36a9-45c4-9eee-eb0c161d3caa",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 368,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "4a7bf8c3-d87a-46f3-9801-3866a09cd969",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 366,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withGraphQLQuery(`\n            mutation AuthUser($email: String, $password: String) {\n                authUser(email: $email, password: $password) {\n                success\n                token\n            }\n         }           \n    `)\n        .withGraphQLVariables({\n            \"email\": \"admin@admin.com\",\n            \"password\": \"admin123\"\n        })\n        .returns('data.authUser.token')",
          "err": {},
          "uuid": "b074b941-1d1f-4965-b540-55a3d29f7b41",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "6d7a24b8-1fcd-420f-893c-291f93c16531",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();",
          "err": {},
          "uuid": "ab70f720-382a-4636-8b7e-570eb0216534",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 313,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word(6)\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "1fad60a9-7c07-404d-98bd-0e6ae8fd4a46",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a category",
          "fullTitle": "API - Should delete a category",
          "timedOut": false,
          "duration": 881,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "729979e4-6c5e-45d0-80f1-38b3ec938137",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a category",
          "fullTitle": "API - Should edit a category",
          "timedOut": false,
          "duration": 700,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getCategories')\n        .withHeaders('Authorization', token)\n        .returns('categories[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editCategory/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": null\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "59d29f85-44a9-49b3-8ec1-a621e4f60609",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 249,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    await spec()\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "adfc87bf-4950-4c5d-ad4f-f459b80e5b7e",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should delete a product",
          "fullTitle": "API - Should delete a product",
          "timedOut": false,
          "duration": 735,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Pegando o id do segundo produto da lista para poder deletar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[1]._id')\n    await spec()\n        .delete(`http://lojaebac.ebaconline.art.br/api/deleteProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "8864e29d-6144-40e3-8409-a15d893792cf",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should edit a product",
          "fullTitle": "API - Should edit a product",
          "timedOut": false,
          "duration": 850,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product()\n    const productPrice = faker.commerce.price()\n    // Pegando o id do terceiro produto da lista para poder editar\n    id = await spec()\n        .get('http://lojaebac.ebaconline.art.br/public/getProducts')\n        .withHeaders('Authorization', token)\n        .returns('products[2]._id')\n    await spec()\n        .put(`http://lojaebac.ebaconline.art.br/api/editProduct/${id}`)\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": productPrice,\n            \"quantity\": 1000\n        })\n        .expectStatus(200)\n        .expectJson('success', true)",
          "err": {},
          "uuid": "e0429de2-c551-472d-8ccb-3dc640aaf08f",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a category",
          "fullTitle": "FRONT - Should add a category",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add category')\n        .useInteraction('Add category response')\n        .post('http://localhost:4000/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "201e8f93-c509-4a54-9570-f8b0ee70d515",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a category",
          "fullTitle": "API - Should add a category",
          "timedOut": false,
          "duration": 255,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newCategory = faker.lorem.word()\n    await flow('Add category')\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": newCategory,\n            \"photo\": 'https://www.zipmaster.com/wp-content/uploads/2024/04/Zippy-Tool-In-Use-1-768x768.jpg'\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "890d14bc-a7c4-4b19-8a1f-60de013b08d1",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "FRONT - Should add a product",
          "fullTitle": "FRONT - Should add a product",
          "timedOut": false,
          "duration": 1,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow('Add product')\n        .useInteraction('Add product response')\n        .post('http://localhost:4000/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "f7a2fcaf-f8cc-44f7-bed7-51f7b89ea413",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Should add a product",
          "fullTitle": "API - Should add a product",
          "timedOut": false,
          "duration": 119,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const productName = faker.commerce.product();\n    await flow('Add product')\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson({\n            \"name\": productName,\n            \"price\": 350.00,\n            \"quantity\": 1\n        })\n        .expectStatus(200)\n        .expectJson('success', true);",
          "err": {},
          "uuid": "9e4c530e-c8e8-4b88-b9b7-5be8a7298bb4",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a category in the list",
          "fullTitle": "Should add a category in the list",
          "timedOut": false,
          "duration": 125,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation AddCategory($name: String, $photo: String) {\n                addCategory(name: $name, photo: $photo) {\n                name\n                photo\n            }\n         }      \n    `)\n        .withGraphQLVariables({\n            \"name\": \"Bags\",\n            \"photo\": \"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\"\n        })\n        .returns('data._id')\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                addCategory: {\n                    name: like(\"Bags\"),\n                    photo: like(\"https://www.zipmaster.com/wp-content/uploads/2022/04/Reusable-Cloth-Shopping-Bags-Rainbow-Pack-200-Case-Reusable-Bags-B26-061-3-1000x1000.jpg.webp\")\n                }\n            }\n        })",
          "err": {},
          "uuid": "e5e3218d-c1a2-4a13-9907-32cb754f2cc4",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a category",
          "fullTitle": "Should delete a category",
          "timedOut": false,
          "duration": 119,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n        mutation DeleteCategory($deleteCategoryId: ID!) {\n            deleteCategory(id: $deleteCategoryId) {\n            name\n         }\n       }        \n    `)\n        .withGraphQLVariables({\n            \"deleteCategoryId\": \"66f835c6995b0c7c4e35b6da\"\n        })\n        .expectStatus(200)\n        .expectJsonMatch({\n            data: {\n                deleteCategory: {\n                    name: null \n                }\n            }\n        });",
          "err": {},
          "uuid": "e944cbcc-a0be-4b89-bffe-f58467cdca80",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a category",
          "fullTitle": "Should edit a category",
          "timedOut": false,
          "duration": 129,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders(\"Authorization\", token)\n        .withGraphQLQuery(`\n            mutation EditCategory($editCategoryId: ID!, $name: String, $photo: String) {\n                editCategory(id: $editCategoryId, name: $name, photo: $photo) {\n                name\n                photo\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editCategoryId\": \"66f5aced42524225170155b4\",\n            \"name\": `Viagens${Math.floor(Math.random() * 100)}`,\n            \"photo\": \"https://www.gstatic.com/webp/gallery/1.sm.webp\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editCategory: {\n                    name: null,  \n                    photo: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "b1059b52-b291-47fe-b0bf-65a42a24645b",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should add a product",
          "fullTitle": "Should add a product",
          "timedOut": false,
          "duration": 123,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation AddProduct($name: String, $price: Float, $quantity: Float) {\n                addProduct(name: $name, price: $price, quantity: $quantity) {\n                name\n                price\n                quantity\n            }\n        }     \n    `)\n        .withGraphQLVariables({\n            \"name\": `Novo produto${Math.floor(Math.random() * 100)}`,\n            \"price\": 100.00,\n            \"quantity\": Math.floor(Math.random() * 100)\n        })\n        .expectStatus(200)\n        .expectBodyContains(\"name\", \"price\", \"quantity\")",
          "err": {},
          "uuid": "d0316e90-6c01-4712-b9e3-e9491d63ce98",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should delete a product",
          "fullTitle": "Should delete a product",
          "timedOut": false,
          "duration": 128,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation DeleteProduct($deleteProductId: ID!) {\n                deleteProduct(id: $deleteProductId) {\n                name\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"deleteProductId\": \"66f8351f995b0c7c4e35b6ae\"\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                deleteProduct: {\n                    name: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "0df7636d-ee88-4ec2-9a77-8f8f825581ac",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should edit a product",
          "fullTitle": "Should edit a product",
          "timedOut": false,
          "duration": 121,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await spec()\n        .post('http://lojaebac.ebaconline.art.br/graphql')\n        .withHeaders('Authorization', token)\n        .withGraphQLQuery(`\n            mutation EditProduct($editProductId: ID!, $name: String, $price: Float, $quantity: Float) {\n                editProduct(id: $editProductId, name: $name, price: $price, quantity: $quantity) {\n                name\n                quantity\n            }\n        }\n    `)\n        .withGraphQLVariables({\n            \"editProductId\": \"66f562b242524225170151c6\",\n            \"name\": `Guitarra${Math.floor(Math.random() * 100)}`,\n            \"price\": 2.000,\n            \"quantity\": 500\n        })\n        .expectStatus(200)\n        .expectJson({\n            data: {\n                editProduct: {\n                    name: null,\n                    quantity: null\n                }\n            }\n        })",
          "err": {},
          "uuid": "abb76874-6617-4838-ae93-b888cbacabeb",
          "parentUUID": "2da29a36-192f-4f7b-bf0d-5274e01c2a34",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "1fad60a9-7c07-404d-98bd-0e6ae8fd4a46",
        "729979e4-6c5e-45d0-80f1-38b3ec938137",
        "59d29f85-44a9-49b3-8ec1-a621e4f60609",
        "adfc87bf-4950-4c5d-ad4f-f459b80e5b7e",
        "8864e29d-6144-40e3-8409-a15d893792cf",
        "e0429de2-c551-472d-8ccb-3dc640aaf08f",
        "201e8f93-c509-4a54-9570-f8b0ee70d515",
        "890d14bc-a7c4-4b19-8a1f-60de013b08d1",
        "f7a2fcaf-f8cc-44f7-bed7-51f7b89ea413",
        "9e4c530e-c8e8-4b88-b9b7-5be8a7298bb4",
        "e5e3218d-c1a2-4a13-9907-32cb754f2cc4",
        "e944cbcc-a0be-4b89-bffe-f58467cdca80",
        "b1059b52-b291-47fe-b0bf-65a42a24645b",
        "d0316e90-6c01-4712-b9e3-e9491d63ce98",
        "0df7636d-ee88-4ec2-9a77-8f8f825581ac",
        "abb76874-6617-4838-ae93-b888cbacabeb"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 4849,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": "false",
        "html": "true",
        "json": "true"
      },
      "version": "6.3.0"
    }
  }
}